plugins {
	id 'org.springframework.boot' version '2.2.5.RELEASE'
	id 'java'
	id 'com.google.cloud.tools.jib' version '2.1.0'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: "com.google.cloud.tools.jib"

group = 'com.glb.training'
version = '0.0.3-SNAPSHOT'
sourceCompatibility = '13'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/snapshot' }
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springCloudVersion', "Hoxton.SR3")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	//Service Discovery
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	
	//Config Server
    implementation 'org.springframework.cloud:spring-cloud-config-client'
	
	//For tracing
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	implementation 'org.springframework.cloud:spring-cloud-starter-zipkin'
	
	//Data Access
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	
	//Monitoring
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	
	// Rest Clients
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	
	// Circuit Breaker
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix'
	
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
		exclude group: 'junit', module: 'junit'
	}
	
	testCompile('org.junit.jupiter:junit-jupiter-api')
    testRuntime('org.junit.jupiter:junit-jupiter-engine')
    testCompile('org.junit.jupiter:junit-jupiter-params')
    testCompile('org.junit.platform:junit-platform-launcher')
    testCompile('org.junit.platform:junit-platform-runner')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "org.junit:junit-bom:5.5.2"
	}
}

test {
	useJUnitPlatform()
}

tasks.build.dependsOn tasks.jib

jib {
  from {
    image = 'adoptopenjdk/openjdk13-openj9:jre-13.0.2_8_openj9-0.18.0-alpine'
  }
  to {
    image = 'luiscortes/book-store-inventory-ms'
    credHelper = 'secretservice'
    tags = ['latest']
  }
  container {
    ports = ['8100']
    user = 'nobody:nogroup'
  }
}

